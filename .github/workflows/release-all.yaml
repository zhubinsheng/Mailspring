name: Build and Release All

on:
  workflow_dispatch:
  push:
    branches:
        - master
        - 'ci-*'
        - 'stable*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - 'ci-*'
      - 'stable*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt install -y software-properties-common
          sudo apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
          sudo apt install -y unzip nodejs autoconf automake build-essential clang cmake execstack fakeroot git libc-ares-dev libctemplate-dev libcurl4-openssl-dev libglib2.0-dev libicu-dev libsasl2-dev libsasl2-modules libsasl2-modules-gssapi-mit libsecret-1-dev libssl-dev libnss3 libnss3-dev libtidy-dev libtool libxext-dev libxkbfile-dev libxml2-dev libxtst-dev rpm uuid-dev xvfb
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cache NodeJS modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./app/node_modules
          key: ubuntu-deps-${{ hashFiles('yarn.lock') }}-${{ hashFiles('app/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: DEBUG=electron-packager npm run build
      - name: Upload Deb Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mailspring-Linux-Deb
          path: app/dist/mailspring-*.deb
      - name: Upload RPM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mailspring-Linux-RPM
          path: app/dist/mailspring-*.rpm
      - name: Compress Main Directory
        run: |
          tar -czvf app/dist/mailspring-linux-x64.tar.gz -C app/dist mailspring-linux-x64
      - name: Upload Main Directory Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mailspring-Linux-x64
          path: app/dist/mailspring-linux-x64.tar.gz

  build-windows:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cache NodeJS modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./app/node_modules
          key: windows-deps-${{ hashFiles('yarn.lock') }}-${{ hashFiles('app/package-lock.json') }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Compress Windows Directory
        run: |
          cd app/dist && zip -r mailspring-win32-x64.zip Mailspring-win32-x64
      - name: Upload Windows Directory Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mailspring-Windows-x64
          path: app/dist/mailspring-win32-x64.zip

  build-macos:
    strategy:
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Cache NodeJS modules
        uses: actions/cache@v4
        with:
          path: |
            ./node_modules
            ./app/node_modules
          key: ${{ matrix.os }}-${{ runner.arch }}-deps-${{ hashFiles('yarn.lock') }}-${{ hashFiles('app/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: DEBUG=electron-packager,electron-osx-sign,electron-notarize* npm run build
      - name: Rename artifacts
        if: matrix.os == 'macos-latest'
        run: |
          mv app/dist/Mailspring.zip app/dist/Mailspring-AppleSilicon.zip
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mailspring-${{ matrix.os }}
          path: |
            app/dist/Mailspring*.zip

  release:
    needs: [build-linux, build-windows, build-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          pattern: Mailspring-*
      - name: List all files to upload
        run: |
          if [ -d artifacts ]; then
            find artifacts -type f
          else
            echo "No artifacts found, please make sure all build workflows have completed and uploaded artifacts."
          fi
      - name: Prepare release assets
        run: |
          ls -R artifacts
          VERSION="${GITHUB_REF_NAME#v}"

          # Windows
          cp artifacts/Mailspring-Windows-x64/mailspring-win32-x64.zip mailspring-${VERSION}-windows.exe

          # Linux
          cp artifacts/Mailspring-Linux-x64/mailspring-linux-x64.tar.gz mailspring-${VERSION}-linux-x64.tar.gz
          cp artifacts/Mailspring-Linux-RPM/mailspring-*.rpm mailspring-${VERSION}.rpm
          cp artifacts/Mailspring-Linux-Deb/mailspring-*.deb mailspring-${VERSION}.deb

          # macOS
          cp artifacts/Mailspring-macos-latest/Mailspring-AppleSilicon.zip mailspring-${VERSION}-macos-AppleSilicon.zip
          cp artifacts/Mailspring-macos-13/Mailspring.zip mailspring-${VERSION}-macos-Intel.zip
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mailspring-*-windows.exe
            mailspring-*-linux-x64.tar.gz
            mailspring-*.rpm
            mailspring-*.deb
            mailspring-*-macos-AppleSilicon.zip
            mailspring-*-macos-Intel.zip 